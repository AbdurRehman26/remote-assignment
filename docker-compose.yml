# For more information: https://laravel.com/docs/sail
version: '3'
services:
    laravel.test:
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        build:
            context: ./vendor/laravel/sail/runtimes/8.1
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.1/app
        ports:
            - '${APP_PORT:-80}:80'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG: '${XDEBUG:-false}'
            XDEBUG_PORT: '${XDEBUG_PORT:-9003}'
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - redis
            - minio
    mysql:
        platform: linux/x86_64
        image: 'mysql:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - 'sailmysql:/var/lib/mysql'
        networks:
            - sail
        healthcheck:
            test: ['CMD', 'mysqladmin', 'ping', '-p${DB_PASSWORD}']
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sailredis:/data'
        networks:
            - sail
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            retries: 3
            timeout: 5s
    minio:
        image: 'minio/minio:latest'
        ports:
            - '${FORWARD_MINIO_PORT:-9000}:9000'
            - '${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900'
        environment:
            MINIO_ROOT_USER: '${AWS_ACCESS_KEY_ID:-sail}'
            MINIO_ROOT_PASSWORD: '${AWS_SECRET_ACCESS_KEY:-password}'
        volumes:
            - 'sailminio:/data/minio'
        networks:
            - sail
        command: minio server /data/minio --console-address ":8900"
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
            retries: 3
            timeout: 5s
    minioBucket:
        image: minio/mc
        networks:
            - sail
        depends_on:
            - minio
        entrypoint: >
            /bin/sh -c "
            sleep 3;
            /usr/bin/mc config host add minio http://minio:9000 '${AWS_ACCESS_KEY_ID:-sail}' '${AWS_SECRET_ACCESS_KEY:-password}';
            /usr/bin/mc mb minio/${AWS_BUCKET:-robograding};
            /usr/bin/mc policy set download minio/${AWS_BUCKET:-robograding};
            exit 0;
            "
networks:
    sail:
        driver: bridge
volumes:
    sailmysql:
        driver: local
    sailredis:
        driver: local
    sailminio:
        driver: local
